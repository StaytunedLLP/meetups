name: 01_Dagger / DevOps Package Without Dagger

on:
  push:
    branches:
      - main
    paths:
      - "src/01_dagger_24Aug2024/dockerfiles/devops.dockerfile"
      - ".github/workflows/01_dagger_devops-wo-dagger.yml"

env:
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  PACKAGE_NAME: devops

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          driver-opts: image=moby/buildkit:latest

      - name: Get list of organizations
        run: |
          ORGS=$(gh org list | awk '{print tolower($0)}' | tr '\n' ' ')
          echo "ORGS=$ORGS" >> $GITHUB_ENV

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.PACKAGE_NAME }}-${{ matrix.architecture }}-${{ hashFiles('src/01_dagger_24Aug2024/dockerfiles/devops.dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ env.PACKAGE_NAME }}-${{ matrix.architecture }}-
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: src/01_dagger_24Aug2024/dockerfiles/devops.dockerfile
          platforms: linux/${{ matrix.architecture }}
          push: false
          tags: ${{ env.PACKAGE_NAME }}:${{ matrix.architecture }}-latest
          cache-from: type=gha,scope=${{ github.workflow }}-${{ matrix.architecture }}
          cache-to: type=gha,mode=max,scope=${{ github.workflow }}-${{ matrix.architecture }}

      - name: Publish Docker image to multiple organizations
        run: |
          for org in ${{ env.ORGS }}; do
            echo "Processing organization: $org"
            echo "------------------------------"
            # Tag and push the Docker image
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ghcr.io -u "$org" --password-stdin
            docker tag $PACKAGE_NAME:${{ matrix.architecture }}-latest ghcr.io/$org/$PACKAGE_NAME:${{ matrix.architecture }}-latest
            docker push ghcr.io/$org/$PACKAGE_NAME:${{ matrix.architecture }}-latest
            echo "Build and push completed for $org"
            echo "------------------------------"
          done

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get list of organizations
        run: |
          ORGS=$(gh org list | awk '{print tolower($0)}' | tr '\n' ' ')
          echo "ORGS=$ORGS" >> $GITHUB_ENV

      - name: Create and push manifest list
        run: |
          for org in ${{ env.ORGS }}; do
            echo "Creating and pushing manifest list for organization: $org"
            echo "------------------------------"
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ghcr.io -u "$org" --password-stdin
            docker manifest create ghcr.io/$org/$PACKAGE_NAME:latest \
              --amend ghcr.io/$org/$PACKAGE_NAME:amd64-latest \
              --amend ghcr.io/$org/$PACKAGE_NAME:arm64-latest
            docker manifest push ghcr.io/$org/$PACKAGE_NAME:latest
            echo "Manifest list created and pushed for $org"
            echo "------------------------------"
          done
